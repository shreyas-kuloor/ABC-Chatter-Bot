name: Publish and Deploy

on:
  push:
    branches:
      - main

jobs:
  publish_and_deploy:
    name: Publish Docker image to Google Cloud Artifact Registry
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to the repo
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with: 
          token_format: access_token
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
      
      - name: Auth Docker to Google Cloud Artifact Registry
        uses: docker/login-action@v1
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          registry: us-docker.pkg.dev
      
      - name: Build and Push Docker image
        run: |-
        docker build -t "us-docker.pkg.dev/${{ vars.GCLOUD_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO }}/${{ vars.CLOUD_RUN_SERVICE }}:${{ github.sha }}" ./
        docker push "us-docker.pkg.dev/${{ vars.GCLOUD_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO }}/${{ vars.CLOUD_RUN_SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ vars.CLOUD_RUN_SERVICE }}
          image: us-docker.pkg.dev/${{ vars.GCLOUD_PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPO }}/${{ vars.CLOUD_RUN_SERVICE }}:${{ github.sha }}
          region: us-central1
          flags: '--min-instances=1 --no-cpu-throttling'
          env_vars: |
            DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}
            THREAD_MESSAGE_LIMIT=${{ vars.THREAD_MESSAGE_LIMIT }}
            OPENAI_BASE_URL=${{ vars.OPENAI_BASE_URL }}
            OPENAI_MODEL=${{ vars.OPENAI_MODEL }}
            OPENAI_SYSTEM_CONTENT=${{ vars.OPENAI_SYSTEM_CONTENT }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            RANDOM_REACT_UPPER_BOUND=${{ vars.RANDOM_REACT_UPPER_BOUND }}
            CHUG_EMOTE_NAME=${{ vars.CHUG_EMOTE_NAME }}
            DEFAULT_GAME_IMAGE=${{ vars.DEFAULT_GAME_IMAGE }}
            IGDB_BASE_URL=${{ vars.IGDB_BASE_URL }}
            IGDB_AUTH_URL=${{ vars.IGDB_AUTH_URL }}
            IGDB_CLIENT_ID=${{ secrets.IGDB_CLIENT_ID }}
            IGDB_CLIENT_SECRET=${{ secrets.IGDB_CLIENT_SECRET }}
            CHUG_TIMEOUT_SECONDS=${{ vars.CHUG_TIMEOUT_SECONDS }}
            GAME_IMAGE_BASE_URL=${{ vars.GAME_IMAGE_BASE_URL }}
            GAME_IMAGE_SIZE=${{ vars.GAME_IMAGE_SIZE }}
            BOT_COMMAND_PREFIX=${{ vars.BOT_COMMAND_PREFIX }}
            CHUG_POLL_IMAGE=${{ vars.CHUG_POLL_IMAGE }}
            STABLE_DIFFUSION_BASE_URL=${{ secrets.STABLE_DIFFUSION_BASE_URL }}
            STABLE_DIFFUSION_SAMPLING_STEPS=${{ vars.STABLE_DIFFUSION_SAMPLING_STEPS }}
            ELEVEN_LABS_API_KEY=${{ secrets.ELEVEN_LABS_API_KEY }}
            ELEVEN_LABS_BASE_URL=${{ vars.ELEVEN_LABS_BASE_URL }}
            ELEVEN_LABS_STABILITY=${{ vars.ELEVEN_LABS_STABILITY }}
            ELEVEN_LABS_SIMILARITY_BOOST=${{ vars.ELEVEN_LABS_SIMILARITY_BOOST }}
